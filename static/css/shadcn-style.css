:root {
    --font-sans: 'Inter', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
    --background: 0 0% 100%;
    --foreground: 222.2 47.4% 11.2%;
    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 47.4% 11.2%;
    --card: 0 0% 100%;
    --card-foreground: 222.2 47.4% 11.2%;
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --primary: 142.1 76.2% 36.3%;
    --primary-foreground: 355.7 100% 97.3%;
    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;
    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;
    --destructive: 0 100% 50%;
    --destructive-foreground: 210 40% 98%;
    --ring: 142.1 76.2% 36.3%;
    --radius: 0.5rem;
}

.dark {
    --background: 224 71% 4%;
    --foreground: 213 31% 91%;
    --muted: 223 47% 11%;
    --muted-foreground: 215.4 16.3% 56.9%;
    --popover: 224 71% 4%;
    --popover-foreground: 215 20.2% 65.1%;
    --card: 224 71% 4%;
    --card-foreground: 213 31% 91%;
    --border: 216 34% 17%;
    --input: 216 34% 17%;
    --primary: 142.1 70.6% 45.3%;
    --primary-foreground: 210 40% 98%;
    --secondary: 222.2 47.4% 11.2%;
    --secondary-foreground: 210 40% 98%;
    --accent: 216 34% 17%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 63% 31%;
    --destructive-foreground: 210 40% 98%;
    --ring: 142.1 76.2% 36.3%;
}

body {
    font-family: var(--font-sans);
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
    line-height: 1.6;
}

/* Shadcn-inspired button */
.btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--radius);
    font-weight: 500;
    font-size: 0.875rem;
    line-height: 1.5;
    padding: 0.5rem 1rem;
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
}

.btn-primary {
    background-color: hsl(var(--primary));
    color: hsl(var(--primary-foreground));
}

.btn-primary:hover {
    background-color: hsl(var(--primary) / 0.9);
}

.btn-secondary {
    background-color: hsl(var(--secondary));
    color: hsl(var(--secondary-foreground));
}

.btn-secondary:hover {
    background-color: hsl(var(--secondary) / 0.9);
}

.btn-ghost {
    background-color: transparent;
    color: hsl(var(--foreground));
}

.btn-ghost:hover {
    background-color: hsl(var(--accent));
    color: hsl(var(--accent-foreground));
}

/* Shadcn-inspired card */
.card {
    border-radius: var(--radius);
    background-color: hsl(var(--card));
    color: hsl(var(--card-foreground));
    border: 1px solid hsl(var(--border));
    padding: 1.5rem;
    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
}

.card-header {
    margin-bottom: 1rem;
}

.card-header h3 {
    font-size: 1.25rem;
    font-weight: 600;
    line-height: 1.5;
}

.card-content {
    margin-bottom: 1rem;
}

.card-footer {
    display: flex;
    justify-content: flex-end;
    gap: 0.5rem;
}

/* Form styles */
.form-group {
    margin-bottom: 1rem;
}

.form-label {
    display: block;
    font-size: 0.875rem;
    font-weight: 500;
    margin-bottom: 0.5rem;
    color: hsl(var(--foreground));
}

.form-input {
    display: block;
    width: 100%;
    border-radius: var(--radius);
    border: 1px solid hsl(var(--input));
    background-color: transparent;
    padding: 0.5rem 0.75rem;
    font-size: 0.875rem;
    color: hsl(var(--foreground));
}

.form-input:focus {
    outline: 2px solid hsl(var(--ring));
    outline-offset: 2px;
}

.form-textarea {
    min-height: 6rem;
    resize: vertical;
}

/* Tab styles */
.tabs {
    display: flex;
    border-bottom: 1px solid hsl(var(--border));
    margin-bottom: 1.5rem;
}

.tab {
    padding: 0.75rem 1rem;
    border-bottom: 2px solid transparent;
    font-size: 0.875rem;
    font-weight: 500;
    color: hsl(var(--muted-foreground));
    cursor: pointer;
}

.tab:hover {
    color: hsl(var(--foreground));
}

.tab.active {
    color: hsl(var(--primary));
    border-bottom-color: hsl(var(--primary));
}

/* Table styles */
.table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;
}

.table th {
    font-size: 0.75rem;
    font-weight: 500;
    text-transform: uppercase;
    color: hsl(var(--muted-foreground));
    text-align: left;
    padding: 0.75rem 1rem;
    border-bottom: 1px solid hsl(var(--border));
}

.table td {
    padding: 0.75rem 1rem;
    border-bottom: 1px solid hsl(var(--border));
}

/* Badge styles */
.badge {
    display: inline-flex;
    align-items: center;
    border-radius: 9999px;
    padding: 0.125rem 0.5rem;
    font-size: 0.75rem;
    font-weight: 500;
    line-height: 1;
    white-space: nowrap;
}

.badge-primary {
    background-color: hsl(var(--primary) / 0.1);
    color: hsl(var(--primary));
}

.badge-secondary {
    background-color: hsl(var(--secondary));
    color: hsl(var(--secondary-foreground));
}

/* Alert styles */
.alert {
    border-radius: var(--radius);
    padding: 1rem;
    border: 1px solid hsl(var(--border));
    margin-bottom: 1rem;
}

.alert-success {
    background-color: hsl(142.1 76.2% 36.3% / 0.1);
    border-color: hsl(142.1 76.2% 36.3% / 0.2);
    color: hsl(142.1 76.2% 36.3%);
}

.alert-error {
    background-color: hsl(var(--destructive) / 0.1);
    border-color: hsl(var(--destructive) / 0.2);
    color: hsl(var(--destructive));
}

/* Job card specific styles */
.job-card {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    padding: 1.5rem;
    border-radius: var(--radius);
    background-color: hsl(var(--card));
    border: 1px solid hsl(var(--border));
    transition: border-color 150ms, box-shadow 150ms;
}

.job-card:hover {
    border-color: hsl(var(--primary) / 0.5);
    box-shadow: 0 0 0 1px hsl(var(--primary) / 0.1);
}

.job-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: hsl(var(--foreground));
}

.job-company {
    font-size: 0.875rem;
    color: hsl(var(--foreground) / 0.8);
}

.job-meta {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.75rem;
    color: hsl(var(--muted-foreground));
}

.job-actions {
    display: flex;
    margin-top: auto;
    padding-top: 0.75rem;
}
````html
<!-- filepath: c:\Users\mkmac\OneDrive\Pulpit\cv-creator\templates\index.html -->
{% extends "base.html" %}

{% block title %}AI CV Creator{% endblock %}

{% block content %}
<div class="max-w-3xl mx-auto">
    <div class="mb-8 text-center">
        <h1 class="text-4xl font-bold tracking-tight mb-2">AI CV Creator</h1>
        <p class="text-lg text-muted-foreground">Enter your skills and experience to generate a professional CV</p>
    </div>
    
    <div class="card">
        <div class="space-y-4">
            <textarea id="user_input" class="form-input form-textarea w-full" 
                placeholder="Enter your skills, experience, and education..."></textarea>
            
            <div class="flex justify-center">
                <button onclick="generateCV()" class="btn btn-primary">Generate CV</button>
            </div>
            
            <div id="result" class="bg-muted p-4 rounded-lg mt-4 hidden whitespace-pre-wrap"></div>
        </div>
    </div>
</div>
{% endblock %}

{% block scripts %}
<script>
    function generateCV() {
        const userInput = document.getElementById('user_input').value;
        const resultDiv = document.getElementById('result');
        
        if (!userInput.trim()) {
            alert("Please enter your skills and experience first");
            return;
        }
        
        resultDiv.textContent = "Generating CV...";
        resultDiv.classList.remove('hidden');
        
        fetch('/generate', {
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({prompt: userInput})
        })
        .then(response => response.json())
        .then(data => {
            if (data.error) {
                resultDiv.textContent = "Error: " + data.error;
            } else {
                resultDiv.textContent = data.result;
            }
        })
        .catch(error => {
            resultDiv.textContent = "Error: " + error;
        });
    }
</script>
{% endblock %}
````

<!-- filepath: c:\Users\mkmac\OneDrive\Pulpit\cv-creator\templates\job_success.html -->
{% extends "base.html" %}

{% block title %}Job Posted Successfully{% endblock %}

{% block content %}
<div class="max-w-3xl mx-auto">
    <div class="card text-center">
        <div class="mb-8">
            <div class="inline-flex items-center justify-center w-12 h-12 rounded-full bg-primary/10 text-primary mb-4">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-6 h-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5" />
                </svg>
            </div>
            <h1 class="text-2xl font-bold mb-2">Job Posted Successfully!</h1>
            <p class="text-muted-foreground">Your job listing has been created and is now visible to applicants.</p>
        </div>
        
        <div class="job-card my-6 mx-auto max-w-md">
            <h2 class="job-title">{{ job.title }}</h2>
            <h3 class="job-company">{{ job.company }} - {{ job.location }}</h3>
        </div>
        
        <div class="flex justify-center gap-4 mt-6">
            <a href="/jobs/{{ job.id }}" class="btn btn-primary">View Job</a>
            <a href="/jobs" class="btn btn-secondary">Back to Jobs</a>
        </div>
    </div>
</div>
{% endblock %}

<!-- filepath: c:\Users\mkmac\OneDrive\Pulpit\cv-creator\templates\job_history.html -->
{% extends "base.html" %}

{% block title %}Job History{% endblock %}

{% block content %}
<div class="max-w-5xl mx-auto">
    <h1 class="text-3xl font-bold mb-6">Job Posting History</h1>
    
    {% if jobs %}
        <div class="card overflow-hidden">
            <div class="overflow-x-auto">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Date Added</th>
                            <th>Title</th>
                            <th>Company</th>
                            <th>Source</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for job in jobs %}
                            <tr>
                                <td class="whitespace-nowrap">{{ job.created_at }}</td>
                                <td>{{ job.title }}</td>
                                <td>{{ job.company }}</td>
                                <td>
                                    {% if job.source_url %}
                                        <a href="{{ job.source_url }}" target="_blank" class="text-primary hover:underline">External Link</a>
                                    {% else %}
                                        <span class="badge badge-secondary">Manual Entry</span>
                                    {% endif %}
                                </td>
                                <td>
                                    <a href="/jobs/{{ job.id }}" class="btn btn-ghost py-1 px-2">View</a>
                                </td>
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
    {% else %}
        <div class="card bg-muted">
            <p class="text-center text-muted-foreground">No jobs in history.</p>
        </div>
    {% endif %}
    
    <div class="mt-6">
        <a href="/jobs/create" class="btn btn-primary">Add New Job</a>
    </div>
</div>
{% endblock %}